# -*- coding: utf-8 -*-
"""Reward-Risk Ratios.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P5cABUknSiGMcFoUi6tCU18mDGtBcbw7
"""

import numpy as np
import pandas as pd
from scipy.stats import norm

# Generate some sample return data
np.random.seed(42)
returns = np.random.normal(0.01, 0.05, 1000)  # 1000 daily returns with mean 1% and std 5%

def calculate_var(returns, confidence_level):
    return np.percentile(returns, 100 * (1 - confidence_level))

def expected_shortfall(returns, var):
    return returns[returns < var].mean()

def expected_gain(returns, var):
    return returns[returns > var].mean()

# Confidence levels
alpha = 0.95
beta = 0.05

# Calculate VaR
var_alpha = calculate_var(returns, alpha)
var_beta = calculate_var(returns, beta)

# Calculate expected shortfall (left tail) and expected gain (right tail)
es_left = expected_shortfall(returns, var_beta)
es_right = expected_gain(returns, var_alpha)

# Calculate Rachev ratio
rachev_ratio = es_right / abs(es_left)
print(f"VaR at {alpha} confidence level: {var_alpha}")
print(f"VaR at {beta} confidence level: {var_beta}")
print(f"Expected shortfall (left tail): {es_left}")
print(f"Expected gain (right tail): {es_right}")
print(f"Rachev ratio: {rachev_ratio}")